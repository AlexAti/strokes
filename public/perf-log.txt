strokes-0.3.0-3
NativeCreateArray x 38,824,680 ops/sec ±0.38% (96 runs sampled)
NativeCreateObject x 40,669,802 ops/sec ±0.27% (93 runs sampled)
PreHyde-createListObject x 153,418 ops/sec ±0.59% (98 runs sampled)
PreHyde-createVectorObject x 20,328,375 ops/sec ±0.67% (97 runs sampled)
PreHyde-createMapObject x 7,408,230 ops/sec ±0.76% (93 runs sampled)
PreHyde-accessListObject x 5,973,639 ops/sec ±0.19% (98 runs sampled)
PreHyde-accessVectorObject x 1,506,433 ops/sec ±1.05% (94 runs sampled)
PreHyde-accessMapObject x 18,692,987 ops/sec ±0.20% (99 runs sampled)
Now patching and running again...
This time init took: 165 unit(s)
PostHyde-createListObject x 15,510 ops/sec ±7.44% (73 runs sampled)
PostHyde-createVectorObject x 13,805,909 ops/sec ±1.76% (87 runs sampled)
PostHyde-createMapObject x 7,771 ops/sec ±2.86% (90 runs sampled)
PostHyde-accessListObject x 3,810,333 ops/sec ±0.24% (99 runs sampled)
PostHyde-accessVectorObject x 1,089,620 ops/sec ±0.43% (89 runs sampled)
PostHyde-accessMapObject x 14,882,520 ops/sec ±2.93% (88 runs sampled)
PostHyde-nativeAccessListObject x 962,346 ops/sec ±1.68% (91 runs sampled)
PostHyde-nativeAccessVectorObject x 1,421,422 ops/sec ±0.33% (96 runs sampled)
PostHyde-nativeAccessMapObject x 7,049,834 ops/sec ±2.08% (99 runs sampled)

strokes-0.0.2
NativeCreateArray x 43,564,312 ops/sec ±0.50% (94 runs sampled)
NativeCreateObject x 45,615,221 ops/sec ±0.71% (96 runs sampled)
PreHyde-createListObject x 141,218 ops/sec ±0.19% (99 runs sampled)
PreHyde-createVectorObject x 15,041,092 ops/sec ±1.50% (94 runs sampled)
PreHyde-createMapObject x 7,380,649 ops/sec ±0.83% (96 runs sampled)
PreHyde-accessListObject x 6,232,266 ops/sec ±0.13% (98 runs sampled)
PreHyde-accessVectorObject x 1,439,087 ops/sec ±0.99% (99 runs sampled)
PreHyde-accessMapObject x 18,216,341 ops/sec ±1.20% (98 runs sampled)
Now patching and running again...
This time init took: 126 unit(s)
PostHyde-createListObject x 6,067 ops/sec ±3.71% (78 runs sampled)
PostHyde-createVectorObject x 28,902 ops/sec ±3.53% (86 runs sampled)
PostHyde-createMapObject x 2,730 ops/sec ±3.46% (84 runs sampled)
PostHyde-accessListObject x 4,377,134 ops/sec ±0.31% (98 runs sampled)
PostHyde-accessVectorObject x 1,260,609 ops/sec ±0.19% (99 runs sampled)
PostHyde-accessMapObject x 16,235,479 ops/sec ±2.39% (94 runs sampled)
PostHyde-nativeAccessListObject x 991,323 ops/sec ±1.21% (98 runs sampled)
PostHyde-nativeAccessVectorObject x 1,456,641 ops/sec ±0.13% (98 runs sampled)
PostHyde-nativeAccessMapObject x 7,272,647 ops/sec ±1.82% (94 runs sampled) 

strokes-0.0.1-28-ga5718cf
NativeCreateArray x 41,378,617 ops/sec ±0.48% (93 runs sampled)
NativeCreateObject x 41,377,529 ops/sec ±0.79% (92 runs sampled)
PreHyde-createListObject x 137,533 ops/sec ±0.39% (98 runs sampled)
PreHyde-createVectorObject x 18,973,258 ops/sec ±1.08% (94 runs sampled)
PreHyde-createMapObject x 6,305,330 ops/sec ±0.50% (97 runs sampled)
PreHyde-accessListObject x 6,235,008 ops/sec ±0.18% (97 runs sampled)
PreHyde-accessVectorObject x 1,499,525 ops/sec ±0.16% (101 runs sampled)
PreHyde-accessMapObject x 17,920,765 ops/sec ±0.93% (99 runs sampled)
Now patching and running again...
This time init took: 172 unit(s)
PostHyde-createListObject x 6,362 ops/sec ±3.87% (81 runs sampled)
PostHyde-createVectorObject x 29,661 ops/sec ±3.55% (83 runs sampled)
PostHyde-createMapObject x 2,843 ops/sec ±3.51% (86 runs sampled)
PostHyde-accessListObject x 3,898,253 ops/sec ±0.34% (99 runs sampled)
PostHyde-accessVectorObject x 1,180,825 ops/sec ±3.26% (100 runs sampled)
PostHyde-accessMapObject x 15,566,985 ops/sec ±2.75% (94 runs sampled)
PostHyde-nativeAccessListObject x 966,463 ops/sec ±1.37% (99 runs sampled)
PostHyde-nativeAccessVectorObject x 1,498,455 ops/sec ±0.25% (100 runs sampled)
PostHyde-nativeAccessMapObject x 7,129,673 ops/sec ±1.20% (98 runs sampled)

strokes-0.0.1-24-gb006676
NativeCreateArray x 43,940,159 ops/sec ±0.36% (95 runs sampled)
NativeCreateObject x 45,719,901 ops/sec ±0.54% (98 runs sampled)
PreHyde-createListObject x 132,266 ops/sec ±0.44% (96 runs sampled)
PreHyde-createVectorObject x 15,784,609 ops/sec ±2.50% (91 runs sampled)
PreHyde-createMapObject x 6,802,180 ops/sec ±1.89% (89 runs sampled)
PreHyde-accessListObject x 6,708,434 ops/sec ±0.22% (101 runs sampled)
PreHyde-accessVectorObject x 1,525,887 ops/sec ±0.97% (99 runs sampled)
PreHyde-accessMapObject x 18,672,676 ops/sec ±0.87% (100 runs sampled)
Now patching and running again...
This time init took: 150 unit(s)
PostHyde-createListObject x 6,210 ops/sec ±3.65% (82 runs sampled)
PostHyde-createVectorObject x 28,682 ops/sec ±3.79% (77 runs sampled)
PostHyde-createMapObject x 2,716 ops/sec ±3.64% (82 runs sampled)
PostHyde-accessListObject x 4,442,160 ops/sec ±0.23% (101 runs sampled)
PostHyde-accessVectorObject x 1,219,055 ops/sec ±2.44% (96 runs sampled)
PostHyde-accessMapObject x 15,578,599 ops/sec ±2.75% (95 runs sampled)
PostHyde-nativeAccessListObject x 949,434 ops/sec ±1.58% (97 runs sampled)
PostHyde-nativeAccessVectorObject x 1,440,105 ops/sec ±0.18% (97 runs sampled)
PostHyde-nativeAccessMapObject x 7,111,158 ops/sec ±1.99% (98 runs sampled) 

strokes-0.0.1-20-gab0a87d:
NativeCreateArray x 43,682,343 ops/sec ±0.63% (96 runs sampled)
NativeCreateObject x 45,162,259 ops/sec ±0.33% (94 runs sampled)
PreHyde-createListObject x 137,240 ops/sec ±0.21% (97 runs sampled)
PreHyde-createVectorObject x 14,483,579 ops/sec ±1.60% (92 runs sampled)
PreHyde-createMapObject x 6,308,382 ops/sec ±1.30% (94 runs sampled)
PreHyde-accessListObject x 6,661,056 ops/sec ±0.18% (99 runs sampled)
PreHyde-accessVectorObject x 1,487,953 ops/sec ±0.92% (98 runs sampled)
PreHyde-accessMapObject x 18,248,772 ops/sec ±0.19% (98 runs sampled)
Now patching and running again...
This time init took: 210 unit(s)
PostHyde-createListObject x 504 ops/sec ±4.01% (77 runs sampled)
PostHyde-createVectorObject x 27,725 ops/sec ±3.91% (83 runs sampled)
PostHyde-createMapObject x 131 ops/sec ±4.11% (69 runs sampled)
PostHyde-accessListObject x 4,378,113 ops/sec ±0.17% (100 runs sampled)
PostHyde-accessVectorObject x 1,114,518 ops/sec ±2.48% (95 runs sampled)
PostHyde-accessMapObject x 15,716,887 ops/sec ±2.72% (97 runs sampled)
PostHyde-nativeAccessListObject x 927,638 ops/sec ±0.59% (93 runs sampled)
PostHyde-nativeAccessVectorObject x 1,395,748 ops/sec ±0.16% (98 runs sampled)
PostHyde-nativeAccessMapObject x 2,246,857 ops/sec ±1.58% (94 runs sampled) 

strokes-0.0.1-9-gd3bad7f
NativeCreateArray x 41,203,548 ops/sec ±0.59% (93 runs sampled)
NativeCreateObject x 41,638,474 ops/sec ±0.87% (93 runs sampled)
PreHyde-createListObject x 135,880 ops/sec ±0.24% (98 runs sampled)
PreHyde-createVectorObject x 16,529,511 ops/sec ±3.34% (93 runs sampled)
PreHyde-createMapObject x 6,109,955 ops/sec ±1.24% (95 runs sampled)
PreHyde-accessListObject x 6,034,062 ops/sec ±0.20% (100 runs sampled)
PreHyde-accessVectorObject x 1,480,935 ops/sec ±1.10% (96 runs sampled)
PreHyde-accessMapObject x 17,939,836 ops/sec ±1.02% (98 runs sampled)
Now patching and running again...
This time init took: 112 unit(s)
PostHyde-createListObject x 7,337 ops/sec ±3.76% (79 runs sampled)
PostHyde-createVectorObject x 26,776 ops/sec ±3.75% (79 runs sampled)
PostHyde-createMapObject x 2,474 ops/sec ±3.50% (81 runs sampled)
PostHyde-accessListObject x 3,706,435 ops/sec ±0.20% (101 runs sampled)
PostHyde-accessVectorObject x 1,168,505 ops/sec ±3.02% (99 runs sampled)
PostHyde-accessMapObject x 15,605,960 ops/sec ±3.02% (92 runs sampled)
PostHyde-nativeAccessListObject x 12,247,193 ops/sec ±0.52% (98 runs sampled)
PostHyde-nativeAccessVectorObject x 1,359,785 ops/sec ±0.26% (99 runs sampled)
PostHyde-nativeAccessMapObject x 7,421,159 ops/sec ±2.05% (96 runs sampled) 

strokes-0.0.1-5-g42bf0ac
NativeCreateArray x 31,576,728 ops/sec ±0.91% (77 runs sampled)
NativeCreateObject x 32,620,940 ops/sec ±0.99% (76 runs sampled)
PreHyde-createListObject x 137,576 ops/sec ±0.20% (97 runs sampled)
PreHyde-createVectorObject x 13,435,740 ops/sec ±1.47% (86 runs sampled)
PreHyde-createMapObject x 7,057,150 ops/sec ±0.94% (92 runs sampled)
PreHyde-accessListObject x 6,021,365 ops/sec ±0.15% (101 runs sampled)
PreHyde-accessVectorObject x 1,470,485 ops/sec ±0.89% (96 runs sampled)
PreHyde-accessMapObject x 18,291,528 ops/sec ±1.07% (98 runs sampled)
Now patching and running again...
This time init took: 46 unit(s)
PostHyde-createListObject x 111,630 ops/sec ±2.11% (90 runs sampled)
PostHyde-createVectorObject x 31,892 ops/sec ±3.58% (82 runs sampled)
PostHyde-createMapObject x 2,646 ops/sec ±2.68% (84 runs sampled)
PostHyde-accessListObject x 4,343,536 ops/sec ±0.36% (100 runs sampled)
PostHyde-accessVectorObject x 981,992 ops/sec ±1.16% (92 runs sampled)
PostHyde-accessMapObject x 16,881,976 ops/sec ±0.89% (97 runs sampled)
PostHyde-nativeAccessListObject x 12,229,974 ops/sec ±0.16% (97 runs sampled)
PostHyde-nativeAccessVectorObject x 2,106,821 ops/sec ±1.09% (94 runs sampled)
PostHyde-nativeAccessMapObject x 7,724,544 ops/sec ±0.20% (98 runs sampled) 

strokes-0.0.1
NativeCreateArray x 44,187,873 ops/sec ±0.45% (96 runs sampled)
NativeCreateObject x 45,832,136 ops/sec ±0.21% (99 runs sampled)
PreHyde-createListObject x 149,325 ops/sec ±0.19% (98 runs sampled)
PreHyde-createVectorObject x 16,347,756 ops/sec ±3.05% (96 runs sampled)
PreHyde-createMapObject x 7,465,730 ops/sec ±0.80% (98 runs sampled)
PreHyde-accessListObject x 6,100,869 ops/sec ±0.19% (101 runs sampled)
PreHyde-accessVectorObject x 1,523,104 ops/sec ±0.87% (99 runs sampled)
PreHyde-accessMapObject x 18,879,089 ops/sec ±0.18% (99 runs sampled)
Now patching and running again...
This time init took: 47 unit(s)
PostHyde-createListObject x 129,106 ops/sec ±0.25% (94 runs sampled)
PostHyde-createVectorObject x 33,396 ops/sec ±4.03% (82 runs sampled)
PostHyde-createMapObject x 2,793 ops/sec ±3.22% (82 runs sampled)
PostHyde-accessListObject x 4,501,318 ops/sec ±0.47% (90 runs sampled)
PostHyde-accessVectorObject x 1,203,973 ops/sec ±0.22% (98 runs sampled)
PostHyde-accessMapObject x 15,932,776 ops/sec ±1.98% (86 runs sampled)
PostHyde-nativeAccessListObject x 12,216,840 ops/sec ±0.24% (94 runs sampled)
PostHyde-nativeAccessVectorObject x 2,098,435 ops/sec ±0.91% (99 runs sampled)
PostHyde-nativeAccessMapObject x 7,746,131 ops/sec ±0.18% (99 runs sampled) 
